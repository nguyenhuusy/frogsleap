{"version":3,"sources":["redux/reducers/testReducer.js","redux/reducers/giphyReducer.js","redux/reducers/getColor.js","redux/reducers/savecolorReducer.js","redux/reducers/index.js","redux/type.js","redux/store.js","components/Header/data/navData.js","components/Header/NavItem/index.js","components/Header/NavItem/NavItem.jsx","components/Header/index.js","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","data","label","id","trending","offset","loading","name","combineReducers","test","state","action","type","payload","giphy","getcolor","rowIdx","columnIdx","newColor","saveColor","middleWares","thunk","applyMW","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","createStore","rootReducer","url","NavItem","this","props","link","className","to","Component","Header","preload","autoplay","loop","muted","volume","src","codecs","navItems","map","navItem","idx","key","App","store","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.705c5614.chunk.js","sourcesContent":["import { TEST_REDUX } from '../type';\n\nconst initialState = {\n  data: '',\n  label: 'hello',\n  id: 'abcd'\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case TEST_REDUX:\n      return {\n        ...state,\n        data: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { GET_TRENDING_GIFS, GET_MORE_TRENDING_GIFS, GIPHY_LOADING,SEARCH_GIFS } from '../type';\n\nconst initialState = {\n  trending: {\n    offset: 0\n  },\n  loading: false\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_TRENDING_GIFS:\n      return {\n        ...state,\n        trending: action.payload,\n        loading: false\n      }\n    case SEARCH_GIFS:\n      return {\n        ...state,\n        trending: action.payload,\n        loading: false\n      }\n    case GET_MORE_TRENDING_GIFS:\n      return {\n        ...state,\n        trending: {\n          ...action.payload,\n          data: [ ...state.trending.data, ...action.payload.data ]\n        },\n        loading: false\n      }\n    case GIPHY_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    default:\n      return state;\n  }\n}","import {GET_COLOR} from '../type';\nimport {GENERATE_TILES} from '../type';\nconst initialState={\n    data:[]\n}\n\nexport default function(state=initialState,action) {\n    switch(action.type) {\n        case GET_COLOR:\n            const {rowIdx, columnIdx,newColor}=action.payload;\n            state.data[rowIdx][columnIdx]=newColor;\n            return{\n                ...state,\n                data:[ ...state.data ]\n            }\n        case GENERATE_TILES:\n            return {\n                ...state,\n                data:action.payload\n            }\n        default:\n            return state;\n\n            \n    }\n        \n}","import {SAVE_COLOR,NAME_COLOR} from '../type';\n\nconst initialState = {\n    data:[],\n    name:[]\n}\n\nexport default function(state=initialState,action) {\n    switch (action.type) {\n        case SAVE_COLOR:\n            \n        return {\n                ...state,\n                data:action.payload\n                \n            }\n        case NAME_COLOR:\n        return {\n            ...state,\n            name:action.payload\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport testReducer from './testReducer';\nimport giphyReducer from './giphyReducer';\nimport getColor from './getColor';\nimport savecolorReducer from './savecolorReducer';\nexport default combineReducers({\n  test: testReducer,\n  giphy: giphyReducer,\n  getcolor: getColor,\n  saveColor: savecolorReducer\n});","export const TEST_REDUX = 'TEST_REDUX';\n\n// GIPHY\nexport const GET_TRENDING_GIFS = 'GET_TRENDING_GIFS';\nexport const GET_MORE_TRENDING_GIFS = 'GET_MORE_TRENDING_GIFS';\nexport const SEARCH_GIFS='SEARCH_GIFS';\nexport const GIPHY_LOADING = 'GIPHY_LOADING';\nexport const GET_COLOR ='GET_COLOR';\nexport const GENERATE_TILES='GENERATE_TILES';\nexport const SAVE_COLOR='SAVE_COLOR';\nexport const NAME_COLOR='NAME_COLOR';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleWares = [thunk];\nconst initialState = {};\nconst applyMW = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() ?\n  compose(\n    applyMiddleware(...middleWares),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ) : applyMiddleware(...middleWares);\n\nexport default createStore(\n  rootReducer,\n  initialState,\n  applyMW\n);","export default [\n  {\n    label: 'About us',\n    url: '/'\n  },\n  {\n    label: 'Our Technology',\n    url: '/our-technology'\n  },\n  {\n    label: 'Volunteer Travel',\n    url: '/Volunteer Travel'\n  },\n  {\n    label: 'Achivement',\n    url: '/Achivement'\n  },\n  {\n    label: 'Upcoming Event',\n    url: '/upcomimg-event'\n  },\n]","import NavItem from './NavItem';\n\nexport default NavItem;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NavItem extends Component {\n  render() {\n    const { label, link } = this.props;\n\n    return (\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={ link }>{ label }</Link>\n      </li>\n    )\n  }\n}\n\nexport default NavItem;","import Header from './Header';\n\nexport default Header;","import React, { Component } from 'react';\nimport navItems from './data/navData';\nimport NavItem from './NavItem';\nimport './Header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <video id=\"video_background\" preload=\"auto\" autoplay=\"true\" loop=\"loop\" muted volume=\"0\">\n                        <source src=\"https://bitly.com.vn/s9Wnq\" type=\"video/webm\"/>\n                        <source src=\"https://bitly.com.vn/s9Wnq\" type=\"video/ogg ogv\" codecs=\"theora, vorbis\"/>\n                        <source src=\"https://bitly.com.vn/s9Wnq\" type=\"video/mp4\"/>\n                </video>\n        <nav className=\"nav\">\n          <div className=\"nav-logo-wrap\">\n            <img src=\"https://i.imgur.com/rTLOgiz.png\" className=\"logo\"></img>\n          </div>\n          <ul className=\"nav-list\">\n            {navItems.map((navItem, idx) =>\n              <NavItem\n                key={ idx }\n                label={ navItem.label }\n                link={ navItem.url }\n              />\n            )}\n          </ul>\n        </nav>\n        <div className=\"hero-content\">\n          <h1 className=\"hero-content-title\">Experience our Viet Nam</h1>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Header from './components/Header';\n\n//import NotFound from './pages/NotFound';\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n     <Provider store={ store }>\n      \n        <div className=\"app\">\n          <BrowserRouter>\n            <Header/>\n            <Switch>\n              {/* <Route exact path=\"/\" component={ Home }/> */}\n              \n              {/* <Route component={ NotFound }/> */}\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}