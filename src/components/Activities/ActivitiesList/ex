class Activities extends Component {
  constructor() {
    super();
    this.state = {

    }
  }
  componentDidMount = () => {
    this.showSlides(slideIndex);
  }


  // Next/previous controls
  plusSlides = (n,c) => {
    this.showSlides(slideIndex += n,c);
  }

  // Thumbnail image controls
  currentSlide = (n) => {
    this.showSlides(slideIndex = n);
  }

  showSlides = (n,c) => {
    var i;
   
    var slides = document.getElementsByClassName("myslides");
    
    console.log('n',n)
    
    for (i = 0; i < slides.length; i++) {
      var a=slides[i].style.left;
      var b= a.slice(0,a.length-2)
      if (c>0) {
      slides[i].style.left =`${Number(b) - 600}px` } 
      else {slides[i].style.left =`${Number(b) + 600}px`}  
       if (slides[0].style.left==='234px') {
         slides[slides.length-1].style.left= "-366px"
       }
      if (slides[i].style.left==='834px') {
        slides[i].style.transform="matrix3d(0.379526, 0, 0.241785, -0.000201487, 0, 0.45, 0, 0, -0.5373, 0, 0.843391, -0.000702826, -150, 0, 0, 1)"
      }
      if (slides[i].style.left==='234px') {
        slides[i].style.transform="matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)"
      }
      if (slides[i].style.left==='-366px') {
        slides[i].style.transform="matrix3d(0.379526, 0, -0.241785, 0.000201487, 0, 0.45, 0, 0, 0.5373, 0, 0.843391, -0.000702826, 150, 0, 0, 1)"
      }
      
    }
    
    //  slides[slideIndex - 1].style.display = "block";
    //  slides[slideIndex].style.display = "block";
    //  slides[slideIndex+1].style.display = "block";
    
    
  }

  render() {
    return (
      <div className="activities">
        <ul className="slideshow-container">

          {ActivitiesData.map((item, idx) =>
            <ActivitiesList
              key={idx}
              url={item.url}
              left={ -366+ idx * 600}
            />
          )}


        </ul>
        <a class="prev" onClick={() => this.plusSlides(-1,-1)}>&#10094;</a>
        <a class="next" onClick={() => this.plusSlides(1,1)}>&#10095;</a>

      </div>

    )
  }
}